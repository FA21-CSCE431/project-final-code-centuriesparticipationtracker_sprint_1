<% content_for(:html_title) { 'Points Tracker' } %>

<h1>You're logged in to Admin View! Welcome, <%= current_member.name%></h1>

<!-- <%= link_to("Home", {controller: "home", action: "index"}) %> -->
<br/>

<div class="mt-5 container home index">
<h2>Member Participation:</h3>
<table id="ParticipationTable" class="mt-3 table listing">
  <thead>
    <tr>
      <th>Member</th>
      <th onclick="sortTable(1)">Approved Service Hours</th>
      <th onclick="sortTable(2)">Unapproved Service Hours</th>
      <th onclick="sortTable(3)">Attendance Percentage</th>
      <th onclick="sortTable(4)">Missed Mandatory Events</th>
    </tr>
  </thead>
  <tbody>
    <% @members.where(isAdmin: false).each do |member| %>
      <tr>
        <td><%= member.name %></td>
        <td><%= @service_hours.where(member_id: member.id, isApproved: true,).sum(:hours) %></td>
        <td><%= @service_hours.where(member_id: member.id, isApproved: false).sum(:hours) %></td>
        <td><%= 100*member.events.where('datetime < ?', Time.now).length / @event_num %></td>
        <td><%= @mandatory_event_num - member.events.where(isMandatory: true).where('datetime < ?', Time.now).length %></td>
      </tr>
    <% end %>
  </tbody>
</table>

</div>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("ParticipationTable");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (Number(x.innerHTML) > Number(y.innerHTML)) {
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (Number(x.innerHTML) < Number(y.innerHTML)) {
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
